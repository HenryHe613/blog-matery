<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Matery添加在线聊天功能</title>
      <link href="/5741.html"/>
      <url>/5741.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Matery主题默认支持两种在线聊天工具。一是DaoVoice，二是Tidio。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/06/05/tD38JS.png" alt="tD38JS.png"></p><p>上面一点黑灰色的是Tidio，下面一点蓝色的是DaoVoice。（Tidio按钮的颜色有5种可以选，DaoVoice不清楚，没有深入研究过）</p><p>我个人比较喜欢Tidio，毕竟长得好看哈哈。同时也不会挡住红色的主页按钮。</p><p>两个同时开启也可以，但肯定是有点奇奇怪怪的。</p><h1 id="安装TiDio-gt-去Tidio官网获取public-key"><a href="#安装TiDio-gt-去Tidio官网获取public-key" class="headerlink" title="安装TiDio=&gt;去Tidio官网获取public_key"></a>安装TiDio=&gt;去Tidio官网获取public_key</h1><p><a href="https://www.tidio.com/" target="_blank" rel="noopener">官网传送门</a></p><p>注册不多讲，不需要实名认证。有点慢是肯定的，毕竟用了CloudFlare的CDN。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/06/05/tD8iOs.png" alt="tD8iOs.png"></p><p>我们只需要Public Key，Private Key需要保管好，不能泄露。</p><h1 id="安装Tidio-gt-在-config-yml中启用Tidio"><a href="#安装Tidio-gt-在-config-yml中启用Tidio" class="headerlink" title="安装Tidio=&gt;在_config.yml中启用Tidio"></a>安装Tidio=&gt;在_config.yml中启用Tidio</h1><p>打开主题文件夹的<code>_config.yml</code>，在大约468行找到Tidio。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/06/05/tD8a1e.png" alt="tD8a1e.png"></p><p>把<code>enable</code>改为<code>true</code>，然后再<code>public_key</code>后填上从Tidio官网获取的Public Key。</p><blockquote><p>注意</p><p><code>public_key:</code>后面必须有一个空格，不然Hexo会报错。</p></blockquote><p>之后，hexo cl&amp;&amp;hexo g -d看看效果，还行吧？</p><h1 id="安装DaoVoice-gt-去Tidio官网获取appid"><a href="#安装DaoVoice-gt-去Tidio官网获取appid" class="headerlink" title="安装DaoVoice=&gt;去Tidio官网获取appid"></a>安装DaoVoice=&gt;去Tidio官网获取appid</h1><p><a href="http://www.daovoice.io/" target="_blank" rel="noopener">官网传送门</a></p><p>DaoVoice有点毛病，Github不能登录。微信我没尝试过，我就用了邮箱注册。而且这个邀请码在这里吓唬人，不填其实也不要紧的。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/06/05/tDJmM4.png" alt="tDJmM4.png"></p><p>保管好API token，下面要用。</p><h1 id="安装DaoVoice-gt-在-config-yml中启用DaoVoice"><a href="#安装DaoVoice-gt-在-config-yml中启用DaoVoice" class="headerlink" title="安装DaoVoice=&gt;在_config.yml中启用DaoVoice"></a>安装DaoVoice=&gt;在_config.yml中启用DaoVoice</h1><p>打开主题文件夹的<code>_config.yml</code>，在大约468行找到Tidio。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/06/05/tDJ8JK.png" alt="tDJ8JK.png"></p><p>把<code>enable</code>改为<code>true</code>，然后再<code>app_id</code>后填上从DaoVoice官网获取的API token。</p><blockquote><p>注意</p><p><code>app_id:</code>后面必须有一个空格，不然Hexo会报错。</p></blockquote><p>之后，hexo cl&amp;&amp;hexo g -d看看效果。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Tidio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine配置及安装</title>
      <link href="/942c.html"/>
      <url>/942c.html</url>
      
        <content type="html"><![CDATA[<h1 id="注册Valine并获取Appid和Appkey"><a href="#注册Valine并获取Appid和Appkey" class="headerlink" title="注册Valine并获取Appid和Appkey"></a>注册Valine并获取Appid和Appkey</h1><p>Valine注册很奇怪，不是去官网注册，而是去LeanCloud注册。</p><blockquote><p>[!TIP]</p><p>注意，免费版的Valine每天强制休眠6小时，也就是说，一天中有6小时无法评论。</p></blockquote><p>Valine有两个版本，一个是国际版，还有一个是国内版。<br>国际版不需要实名认证，国内版需要实名认证。</p><p>我选择国际版hh</p><p>链接： <a href="https://console.leancloud.app/" target="_blank" rel="noopener">国际版</a> <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">国内版</a></p><p>注册不用我多说。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604174953.png" alt=""></p><p>点击<code>创建应用</code>,选择<code>开发版</code>，名字任意。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604180405.png" alt=""></p><p>进入项目，选择 设置=&gt;应用Keys=&gt;Credentials</p><p>你可以看见AppID和AppKey。</p><h1 id="Matery主题开启并配置Valine"><a href="#Matery主题开启并配置Valine" class="headerlink" title="Matery主题开启并配置Valine"></a>Matery主题开启并配置Valine</h1><p>打开主题文件的<code>_config.yml</code>，找到Valine，大概在303行左右。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configuration of the Valine comment module is not activated by default.</span><span class="token comment" spellcheck="true"># To use it, activate the configuration item and set appId and appKey.</span><span class="token comment" spellcheck="true"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>   <span class="token key atrule">appKey</span><span class="token punctuation">:</span>   <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'来不及解释了，快上车~~~'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把<code>enalbe</code>改成true，appId和appKey改成刚刚从leancloud获取的，</p><p>hexo cl&amp;&amp;hexo g&amp;&amp;hexo d看一下，应该就有Valine的评论区了。</p><blockquote><p>[!WARNING]</p><blockquote><p>yaml语法规定，:后面必须要有一个<code>Space</code>！！！不然会出错</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode更改中文和更改字体</title>
      <link href="/b77d.html"/>
      <url>/b77d.html</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode更改中文"><a href="#VSCode更改中文" class="headerlink" title="VSCode更改中文"></a>VSCode更改中文</h1><p>前提是你得安装了VSCode。下载地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">传送门</a></p><p>最好是下载<code>Stable</code>版本的，<code>Insiders</code>版的可能会不稳定</p><p>安装好之后应该是英文的。网上的方法可能有点不适用，我介绍一下我的方法。</p><p>下载Chinese插件。<a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans" target="_blank" rel="noopener">传送门</a></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604181411.png" alt=""></p><p>在右侧点击<code>Download Extension</code>，下载VSIX扩展文件（类似Chromium的CRX）。</p><p>在VSCode插件栏中，右上角···，选择<code>从VSIX安装</code>，选择刚刚下载的插件。</p><p>重启一下VSCode，应该就变中文了。</p><h1 id="VSCode安装JetBrainsMono-Bold字体。"><a href="#VSCode安装JetBrainsMono-Bold字体。" class="headerlink" title="VSCode安装JetBrainsMono-Bold字体。"></a>VSCode安装JetBrainsMono-Bold字体。</h1><p>我最喜欢JetBrainsMono-Bold的字体了。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://cdn.jsdelivr.net/gh/henryhe613/pic/20200604181846.png" alt=""></p><p>VSCode中打开设置=&gt;文本编辑器=&gt;字体=&gt;Font Family，</p><p>改为<code>&#39;JetBrains Mono&#39;</code>.</p><p>前提是你已经安装了JetBrainsMono-Bold字体。</p><p>如果要使用其他字体，请先安装，再到控制面板里找到字体文件夹，确定字体在文件夹中的名字，再复制到VSCode。不然VSCode认不出来。我就栽在坑里爬了许久。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Loading</title>
      <link href="/f59b.html"/>
      <url>/f59b.html</url>
      
        <content type="html"><![CDATA[<p>在Hexo根目录下新建scripts文件夹，里面再新建loading-pages.js</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">/* global hexo */</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'after_render:html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">const</span> injectHead <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;style type="text/css" lang="css">    #loading-container{        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    }    .loading-image{        width: 120px;        height: 50px;        transform: translate(-50%);    }    .loading-image div:nth-child(2) {        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    }    .loading-image div:nth-child(3) {        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    }    .loading-image div:nth-child(4) {        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    }    .loading-image div:nth-child(5) {        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    }   .loading-image div:first-of-type {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    }    .loading-image div:nth-child(2) {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    }    @-webkit-keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @-webkit-keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @-webkit-keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    @keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6){        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    }    .loading-text{        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    }    @media only screen and (max-width: 500px) {         .loading-text{            font-size: 1.5rem;         }    }    .fadeout {        opacity: 0;        filter: alpha(opacity=0);    }    /* logo出现动画 */    @-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}    @keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);}} &lt;/style> &lt;script>(function () {    const loaded = function(){       setTimeout(function(){            const loader = document.getElementById("loading-container");            loader.className="fadeout" ;//使用渐隐的方法淡出loading page            // document.getElementById("body-wrap").style.display="flex";            setTimeout(function(){                loader.style.display="none";            },1000);         },1000);//强制显示loading page 1s      };    loaded();})() &lt;/script>`</span></span><span class="token punctuation">;</span>     <span class="token keyword">const</span> injectBody <span class="token operator">=</span> <span class="token template-string"><span class="token string">` &lt;div id="loading-container">     &lt;p class="loading-text">玩命加载中 . . . &lt;/p>      &lt;div class="loading-image">         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>         &lt;div>&lt;/div>          &lt;div>&lt;/div>     &lt;/div> &lt;/div>`</span></span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/&lt;\/head>/gi</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;/head>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> lastIndex<span class="token punctuation">)</span> <span class="token operator">+</span> injectHead <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/&lt;body>/gi</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>htmlContent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">let</span> index <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;body>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         htmlContent <span class="token operator">=</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">+</span> injectBody <span class="token operator">+</span> htmlContent<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> htmlContent<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> htmlContent<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudFlare的Workers</title>
      <link href="/9198.html"/>
      <url>/9198.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-js"><code class="language-js"><span class="token string">'use strict'</span><span class="token comment" spellcheck="true">/** * static files (404.html, sw.js, conf.js) */</span><span class="token keyword">const</span> ASSET_URL <span class="token operator">=</span> <span class="token string">'https://www.yelow.ga/'</span><span class="token keyword">const</span> JS_VER <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">const</span> MAX_RETRY <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">/** @type {RequestInit} */</span><span class="token keyword">const</span> PREFLIGHT_INIT <span class="token operator">=</span> <span class="token punctuation">{</span>  status<span class="token punctuation">:</span> <span class="token number">204</span><span class="token punctuation">,</span>  headers<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'access-control-allow-origin'</span><span class="token punctuation">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>    <span class="token string">'access-control-allow-methods'</span><span class="token punctuation">:</span> <span class="token string">'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS'</span><span class="token punctuation">,</span>    <span class="token string">'access-control-max-age'</span><span class="token punctuation">:</span> <span class="token string">'1728000'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * @param {any} body * @param {number} status * @param {Object&lt;string, string>} headers */</span><span class="token keyword">function</span> <span class="token function">makeRes</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  headers<span class="token punctuation">[</span><span class="token string">'--ver'</span><span class="token punctuation">]</span> <span class="token operator">=</span> JS_VER  headers<span class="token punctuation">[</span><span class="token string">'access-control-allow-origin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'*'</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span>status<span class="token punctuation">,</span> headers<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * @param {string} urlStr  */</span><span class="token keyword">function</span> <span class="token function">newUrl</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'fetch'</span><span class="token punctuation">,</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token function">fetchHandler</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'cfworker error:\n'</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>stack<span class="token punctuation">,</span> <span class="token number">502</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  e<span class="token punctuation">.</span><span class="token function">respondWith</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** * @param {FetchEvent} e  */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchHandler</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> req <span class="token operator">=</span> e<span class="token punctuation">.</span>request  <span class="token keyword">const</span> urlStr <span class="token operator">=</span> req<span class="token punctuation">.</span>url  <span class="token keyword">const</span> urlObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">)</span>  <span class="token keyword">const</span> path <span class="token operator">=</span> urlObj<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">.</span>origin<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>urlObj<span class="token punctuation">.</span>protocol <span class="token operator">===</span> <span class="token string">'http:'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    urlObj<span class="token punctuation">.</span>protocol <span class="token operator">=</span> <span class="token string">'https:'</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">301</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      <span class="token string">'strict-transport-security'</span><span class="token punctuation">:</span> <span class="token string">'max-age=99999999; includeSubDomains; preload'</span><span class="token punctuation">,</span>      <span class="token string">'location'</span><span class="token punctuation">:</span> urlObj<span class="token punctuation">.</span>href<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/http/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">httpHandler</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">case</span> <span class="token string">'/http'</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'请更新 cfworker 到最新版本!'</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">'/ws'</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'not support'</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>  <span class="token keyword">case</span> <span class="token string">'/works'</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'it works'</span><span class="token punctuation">)</span>  <span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// static files</span>    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>ASSET_URL <span class="token operator">+</span> path<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * @param {Request} req * @param {string} pathname */</span><span class="token keyword">function</span> <span class="token function">httpHandler</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> pathname<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> reqHdrRaw <span class="token operator">=</span> req<span class="token punctuation">.</span>headers  <span class="token keyword">if</span> <span class="token punctuation">(</span>reqHdrRaw<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'x-jsproxy'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// preflight</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">'OPTIONS'</span> <span class="token operator">&amp;&amp;</span>      reqHdrRaw<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'access-control-request-headers'</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> PREFLIGHT_INIT<span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> acehOld <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token keyword">let</span> rawSvr <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">let</span> rawLen <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">let</span> rawEtag <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">const</span> reqHdrNew <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>reqHdrRaw<span class="token punctuation">)</span>  reqHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'x-jsproxy'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span>  <span class="token comment" spellcheck="true">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span>  <span class="token keyword">const</span> refer <span class="token operator">=</span> reqHdrNew<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'referer'</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> query <span class="token operator">=</span> refer<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>refer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>query<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'missing params'</span><span class="token punctuation">,</span> <span class="token number">403</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">const</span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'--'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 系统信息</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token string">'aceh'</span><span class="token punctuation">:</span>        acehOld <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token string">'raw-info'</span><span class="token punctuation">:</span>        <span class="token punctuation">[</span>rawSvr<span class="token punctuation">,</span> rawLen<span class="token punctuation">,</span> rawEtag<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 还原 HTTP 请求头</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>        reqHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        reqHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>param<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'referer'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    reqHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'referer'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// cfworker 会把路径中的 `//` 合并成 `/`</span>  <span class="token keyword">const</span> urlStr <span class="token operator">=</span> pathname<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/^(https?):\/+/</span><span class="token punctuation">,</span> <span class="token string">'$1://'</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> urlObj <span class="token operator">=</span> <span class="token function">newUrl</span><span class="token punctuation">(</span>urlStr<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>urlObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span><span class="token string">'invalid proxy url: '</span> <span class="token operator">+</span> urlStr<span class="token punctuation">,</span> <span class="token number">403</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/** @type {RequestInit} */</span>  <span class="token keyword">const</span> reqInit <span class="token operator">=</span> <span class="token punctuation">{</span>    method<span class="token punctuation">:</span> req<span class="token punctuation">.</span>method<span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> reqHdrNew<span class="token punctuation">,</span>    redirect<span class="token punctuation">:</span> <span class="token string">'manual'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    reqInit<span class="token punctuation">.</span>body <span class="token operator">=</span> req<span class="token punctuation">.</span>body  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token function">proxy</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">,</span> reqInit<span class="token punctuation">,</span> acehOld<span class="token punctuation">,</span> rawLen<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** *  * @param {URL} urlObj  * @param {RequestInit} reqInit  * @param {number} retryTimes  */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">proxy</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">,</span> reqInit<span class="token punctuation">,</span> acehOld<span class="token punctuation">,</span> rawLen<span class="token punctuation">,</span> retryTimes<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">.</span>href<span class="token punctuation">,</span> reqInit<span class="token punctuation">)</span>  <span class="token keyword">const</span> resHdrOld <span class="token operator">=</span> res<span class="token punctuation">.</span>headers  <span class="token keyword">const</span> resHdrNew <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>resHdrOld<span class="token punctuation">)</span>  <span class="token keyword">let</span> expose <span class="token operator">=</span> <span class="token string">'*'</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> resHdrOld<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token string">'access-control-allow-origin'</span> <span class="token operator">||</span>        k <span class="token operator">===</span> <span class="token string">'access-control-expose-headers'</span> <span class="token operator">||</span>        k <span class="token operator">===</span> <span class="token string">'location'</span> <span class="token operator">||</span>        k <span class="token operator">===</span> <span class="token string">'set-cookie'</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token string">'--'</span> <span class="token operator">+</span> k      resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> v<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>acehOld<span class="token punctuation">)</span> <span class="token punctuation">{</span>        expose <span class="token operator">=</span> expose <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> x      <span class="token punctuation">}</span>      resHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>acehOld <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'cache-control'</span> <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'content-language'</span> <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'content-type'</span> <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'expires'</span> <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'last-modified'</span> <span class="token operator">&amp;&amp;</span>      k <span class="token operator">!==</span> <span class="token string">'pragma'</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>      expose <span class="token operator">=</span> expose <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> k    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>acehOld<span class="token punctuation">)</span> <span class="token punctuation">{</span>    expose <span class="token operator">=</span> expose <span class="token operator">+</span> <span class="token string">',--s'</span>    resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'--t'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// verify</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rawLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> newLen <span class="token operator">=</span> resHdrOld<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'content-length'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span>    <span class="token keyword">const</span> badLen <span class="token operator">=</span> <span class="token punctuation">(</span>rawLen <span class="token operator">!==</span> newLen<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>badLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>retryTimes <span class="token operator">&lt;</span> MAX_RETRY<span class="token punctuation">)</span> <span class="token punctuation">{</span>        urlObj <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">parseYtVideoRedir</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">,</span> newLen<span class="token punctuation">,</span> res<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>urlObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">proxy</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">,</span> reqInit<span class="token punctuation">,</span> acehOld<span class="token punctuation">,</span> rawLen<span class="token punctuation">,</span> retryTimes <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> <span class="token function">makeRes</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token string">'--error'</span><span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`bad len: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>newLen<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, except: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rawLen<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>        <span class="token string">'access-control-expose-headers'</span><span class="token punctuation">:</span> <span class="token string">'--error'</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>retryTimes <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'--retry'</span><span class="token punctuation">,</span> retryTimes<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> status <span class="token operator">=</span> res<span class="token punctuation">.</span>status  resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'access-control-expose-headers'</span><span class="token punctuation">,</span> expose<span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'access-control-allow-origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'--s'</span><span class="token punctuation">,</span> status<span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'--ver'</span><span class="token punctuation">,</span> JS_VER<span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'content-security-policy'</span><span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'content-security-policy-report-only'</span><span class="token punctuation">)</span>  resHdrNew<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'clear-site-data'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token number">301</span> <span class="token operator">||</span>      status <span class="token operator">===</span> <span class="token number">302</span> <span class="token operator">||</span>      status <span class="token operator">===</span> <span class="token number">303</span> <span class="token operator">||</span>      status <span class="token operator">===</span> <span class="token number">307</span> <span class="token operator">||</span>      status <span class="token operator">===</span> <span class="token number">308</span>  <span class="token punctuation">)</span> <span class="token punctuation">{</span>    status <span class="token operator">=</span> status <span class="token operator">+</span> <span class="token number">10</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token punctuation">{</span>    status<span class="token punctuation">,</span>    headers<span class="token punctuation">:</span> resHdrNew<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * @param {URL} urlObj  */</span><span class="token keyword">function</span> <span class="token function">isYtUrl</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    urlObj<span class="token punctuation">.</span>host<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.googlevideo.com'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>    urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/videoplayback'</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * @param {URL} urlObj  * @param {number} newLen  * @param {Response} res  */</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">parseYtVideoRedir</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">,</span> newLen<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>newLen <span class="token operator">></span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isYtUrl</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    urlObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isYtUrl</span><span class="token punctuation">(</span>urlObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> urlObj<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub的raw无法访问</title>
      <link href="/a15e.html"/>
      <url>/a15e.html</url>
      
        <content type="html"><![CDATA[<p>raw.githubusercontent.com收到Qos无法访问</p><p>其实没必要用梯子，修改hosts即可。</p><p>这是网上大神的hosts：</p><pre><code>199.232.4.133 raw.githubusercontent.com</code></pre><p>也可以去<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a> 查</p><p>这是我查得的：</p><pre><code>199.232.68.133 raw.githubusercontent.com</code></pre><p>hosts文件在这里（Windows）</p><pre><code>C:\Windows\System32\drivers\etc\hosts</code></pre><p>推荐UAC的Notepad，可以直接保存。</p><blockquote><p><strong>注意</strong><br>更新hosts后，需要cmd运行<code>ipconfig /flushdns</code>才行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hosts </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去掉Chromium的禁用开发者扩展提示</title>
      <link href="/7653.html"/>
      <url>/7653.html</url>
      
        <content type="html"><![CDATA[<h1 id="去掉Chromium的禁用开发者扩展提示"><a href="#去掉Chromium的禁用开发者扩展提示" class="headerlink" title="去掉Chromium的禁用开发者扩展提示"></a>去掉Chromium的禁用开发者扩展提示</h1><p>对于开发人员来说，Chrome显然是一个必需品。庞大的插件库十分方便。<br>但是Google不知为什么就加了这么一个弹出，十分恶心。</p><p>祭出大神的dll替换工具，可点击下载。</p><p><a href="/images/去除Chrome请停用以开发者模式运行的扩展程序.rar">去除Chrome请停用以开发者模式运行的扩展程序_点击下载</a></p><p>edge的二次开发做的不错，都把chrome.dll给改了。</p><p>像Cent Browser就没改，不过Cent和Chrome的图标确实有点像~~</p><p>安装目录在这里：</p><pre><code>C:\Program Files (x86)\Microsoft\Edge\Application\83.0.478.37</code></pre><blockquote><p><em>注意</em><br>这是默认的安装路径，不同的版本号可能有所不同！！！</p></blockquote><p>记得把Edge关了，然后我们把msedge.dll改成chrome.dll，把刚刚下载的软件解压，拷贝到edge根目录下（就是刚刚代码块里的）</p><p>用管理员模式运行“去除Chrome请停用以开发者模式运行的扩展程序”，</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/24/YziUL8.png" alt="YziUL8.png"></p><p>点<code>应用</code>，成功后，把dll的名字改回msedge.dll。</p><p>再打开edge。</p><p>是不是OK了？</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Edge </tag>
            
            <tag> Chromium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新旧Edge浏览器共存</title>
      <link href="/6799.html"/>
      <url>/6799.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/24/YxLOZq.png" alt="YxLOZq.png"></p><pre><code>~~1. 在Windows搜索中搜索组策略编辑器。2. 导航到计算机配置——》打开管理模板&gt; Microsoft Edge更新&gt;应用程序3. 选择“允许Microsoft Edge并排浏览器体验”。4. 点击“修改政策”设置。5. 选择“启用”，然后单击“确定”。~~</code></pre><p>以上是网上的方法，Chromium Edge v83版已不适用。</p><p>因为在gpedit里找不到<code>“允许Microsoft Edge并排浏览器体验”</code>。</p><p>现在只能用注册表。</p><p>把一下对应代码复制到.reg文件中，然后重新安装Chromium Edge就好了。</p><p>添加旧EDGE</p><pre class="line-numbers language-reg"><code class="language-reg">Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\EdgeUpdate]"Allowsxs"=dword:00000001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>移除旧EDGE</p><pre class="line-numbers language-reg"><code class="language-reg">Windows Registry Editor Version 5.00-[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\EdgeUpdate]"Allowsxs"=dword:00000001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Edge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Chromium内核浏览器无法上网</title>
      <link href="/dbe5.html"/>
      <url>/dbe5.html</url>
      
        <content type="html"><![CDATA[<h1 id="更换Chromium内核浏览器无法上网、"><a href="#更换Chromium内核浏览器无法上网、" class="headerlink" title="更换Chromium内核浏览器无法上网、"></a>更换Chromium内核浏览器无法上网、</h1><p>说实话我的英语也不是特别好，所以一直再找<code>Github</code>汉化版。但是<code>Cent Browser</code>内嵌的<code>Google翻译</code>不咋地，老是抽。看网友都用<code>360极速浏览器</code>，我也真香了，用了360还比较良心的极速浏览器。</p><p>但是360也抽了。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/23/Yxi63t.png" alt="Yxi63t.png"></p><p>于是我试试<code>遨游浏览器</code>，因为这个用的人也很多。</p><p>也抽了。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/23/YxiTCn.png" alt="YxiTCn.png"></p><p>我好奇啊，连续两个浏览器抽了。</p><p>应该是我的环境问题。</p><p>我先把遨游换成IE内核。</p><p>“国产”浏览器大都是<code>Chromium</code>和<code>IE</code>双内核。</p><p>嘿嘿，遨游好了~~</p><p>那为什么Chromium不行？</p><p>我猜是三个浏览器用同一个内核所致。</p><p><code>Cent Browser</code>我用了<code>PP谷歌助手</code>，之前为了访问谷歌，找到的这么一个插件。</p><p>附上<code>PP谷歌助手</code>在<a href="https://chrome.zzzmh.cn/index" target="_blank" rel="noopener">极简插件</a> 的链接：<a href="https://chrome.zzzmh.cn/info?token=kahndhhhcnignmbbpiobmdlgjhgfkfil" target="_blank" rel="noopener">PP谷歌助手</a></p><p>之前我为了在家上网课不卡，把<code>PP谷歌助手</code>关了，结果没法上网。有种浏览器主页被劫持的味道。。。</p><p>没办法，我把<code>PP谷歌助手</code>打开还。于是又可以上网了。</p><p>所以我打算把<code>PP谷歌助手</code>移植到360上。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>打开<code>Cent Browser</code>的<a href="chrome://extensions/">扩展页</a></p><p>打开右上角（不同浏览器可能不同）的<code>开发者模式</code></p><p>找到安装的<code>PP谷歌助手</code>。</p><p>复制<code>PP谷歌助手</code>的ID。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/23/YxkmeU.png" alt="YxkmeU.png"></p><p>我这里的ID是：</p><pre><code>ID：kahndhhhcnignmbbpiobmdlgjhgfkfil</code></pre><blockquote><p>注意：不同版本的Extension的ID是不同的！！！</p></blockquote><p>然后去资源管理器里搜索这个ID。</p><p>我是用<code>Everything</code>，这个软件快。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/23/YxAS6x.png" alt="YxAS6x.png"></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://raw.githubusercontent.com/HenryHe613/Pic/master/ScreenShot_20200523200316.png" alt=""><br>一般搜索出来只有红框里的第二个，我这里其他的四个是我自己创建的。</p><p>如果是<code>Cent Browser</code>的用户，可以直接使用一下链接（记得改成自己的用户名和安装路径哦）：</p><pre><code>C:\Users\{User Name}\AppData\Local\CentBrowser\User Data\Default\Extensions</code></pre>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chromium </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> vnp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天的英语范文</title>
      <link href="/7b51.html"/>
      <url>/7b51.html</url>
      
        <content type="html"><![CDATA[<h1 id="卧槽，董芳居然在钉钉里发了范文！！！"><a href="#卧槽，董芳居然在钉钉里发了范文！！！" class="headerlink" title="卧槽，董芳居然在钉钉里发了范文！！！"></a>卧槽，董芳居然在钉钉里发了范文！！！</h1><p>Dear Tom,<br>    I am sorry to hear that you have trouble learning Chinese idioms. I understand but you should never give up.<br>    As we all know, Chinese idioms are an important part in Chinese. It’s a traditional Chinese culture. They are fun and useful, especially when you learn Chinese history.<br>    If you feel difficult to learn them. The following suggestions may help you. First, you can read more history stories because most of the idioms are from them. Then try to memorize them from time to time. Practice makes perfect. Next, when you talk with Chinese friends, you can try to use them. They will help you a lot. Finally, watching Chinese history TV plays is a good idea to learn and remember idioms.<br>Don’t worry. If you work hard, I believe you can learn idioms well. As the saying goes, “When there is a will, there is a way.” I hope you can use some idioms when you write to me next time. Good luck!<br>Best wishes!<br>                                                                                                                    Yours<br>                                                                                                                  Li Qiang</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/20/Y7J79J.jpg" alt="Y7J79J.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows软件下载技巧</title>
      <link href="/dffe.html"/>
      <url>/dffe.html</url>
      
        <content type="html"><![CDATA[<h1 id="你有遇到过这种情况吗？"><a href="#你有遇到过这种情况吗？" class="headerlink" title="你有遇到过这种情况吗？"></a>你有遇到过这种情况吗？</h1><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="http://img0.imgtn.bdimg.com/it/u=2938205901,556899687&fm=11&gp=0.jpg" alt="广告"></p><p>我猜你这时会安装<del>360</del>卫士等等东西。然而，你又会收到360的骚扰。</p><h3 id="堵不如疏，这是大禹告诉我们的"><a href="#堵不如疏，这是大禹告诉我们的" class="headerlink" title="堵不如疏，这是大禹告诉我们的"></a>堵不如疏，这是大禹告诉我们的</h3><h3 id="所以，广告杀不如防（别下载就好了鸭）"><a href="#所以，广告杀不如防（别下载就好了鸭）" class="headerlink" title="所以，广告杀不如防（别下载就好了鸭）"></a>所以，广告杀不如防（别下载就好了鸭）</h3><h1 id="防：改变你的下载习惯"><a href="#防：改变你的下载习惯" class="headerlink" title="防：改变你的下载习惯"></a>防：改变你的下载习惯</h1><p>推荐两个下载站：</p><p>1.<a href="http://www.pc6.com/" target="_blank" rel="noopener">PC6下载站</a></p><p>2.<a href="https://www.onlinedown.net/" target="_blank" rel="noopener">华军软件园</a></p><p>这几个相比其他的，比较良心。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/17/Y2OjpR.png" alt="Y2OjpR.png"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信网关F612破解</title>
      <link href="/9e79.html"/>
      <url>/9e79.html</url>
      
        <content type="html"><![CDATA[<h1 id="电信家庭网关中兴F612破解超级账号"><a href="#电信家庭网关中兴F612破解超级账号" class="headerlink" title="电信家庭网关中兴F612破解超级账号"></a>电信家庭网关中兴F612破解超级账号</h1><blockquote><p>网上有许多教程，但是大都有误，这是站长亲自试验得出的方法。</p></blockquote><p>最近换了电信的千兆光猫，看见网上有类似教程，我就试了一下。</p><p>期间有许多坑，这里就不一一讲了。</p><p>打开电脑的CMD窗口</p><p>输入命令，一直Ping网关的128端口：</p><pre class="line-numbers language-cmd"><code class="language-cmd">ping 192.168.1.1 -l 128 -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不要关闭原来的窗口，再打开一个CMD，输入命令：</p><pre class="line-numbers language-cmd"><code class="language-cmd">telnet 192.168.1.1 10128<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>账号：root<br>密码：Zte521</p><p>在telnet中输入：</p><pre><code>sendcmd 1 DB p DevAuthInfo</code></pre><p>慢慢找，就能找到超级管理员密码了。<br>账号一般是telecomadmin</p><p>如果要把网关的拨号模式改为桥接模式，其实不用超级管理员账号的。</p><p><a href="http://192.168.1.1/bridge_route.gch" target="_blank" rel="noopener">http://192.168.1.1/bridge_route.gch</a></p><p>打开这个网址即可了。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电信 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人常用网址/代码</title>
      <link href="/2361.html"/>
      <url>/2361.html</url>
      
        <content type="html"><![CDATA[<h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><ol><li><p><a href="https://imgchr.com/" target="_blank" rel="noopener">路过图床</a></p></li><li><p><a href="https://www.dnspod.cn/" target="_blank" rel="noopener">DNS Pod</a></p></li><li><p><a href="https://dash.cloudflare.com/" target="_blank" rel="noopener">CloudFlare-Dashbroad</a></p></li><li><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a></p></li><li><p><a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">Hash生成-ChinaZ</a></p></li><li><p><a href="http://ping.chinaz.com/" target="_blank" rel="noopener">Ping-ChinaZ</a></p></li><li><p><a href="https://picgo.github.io/PicGo-Doc/" target="_blank" rel="noopener">PicGo</a></p><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1></li><li><p><a href="https://cn.bing.com/" target="_blank" rel="noopener">Bing</a></p></li><li><p><a href="https://www2.bing.com/" target="_blank" rel="noopener">Bing-2</a>  Bing在国内老是被DNS污染。可以访问www2.bing.com解决。</p></li></ol><p>如果要把&lt;www2.bing.com&gt;设置成地址栏搜索引擎，网址格式需这样设置：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/24/YxXBge.png" alt="YxXBge.png"></p><pre><code>//搜索引擎www2.bing.com//关键字www2.bing.com//网址格式（用“%s”代替搜索字词）https://www2.bing.com/search?q=%s&amp;go=%E6%8F%90%E4%BA%A4&amp;qs=n&amp;form=QBLH&amp;sp=-1&amp;pq=%E8%85%BE%E8%BE%BEd%27d%27n%27s&amp;sc=1-9&amp;sk=&amp;cvid=653C0C35816245D180F5DE4DB3558B4C</code></pre><ol start="3"><li><a href="https://www.magi.com/" target="_blank" rel="noopener">Magi</a>     这是我很喜欢的一个人工智能搜索引擎<br>下面是设置方法：<br><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/24/YxjuqA.png" alt="YxjuqA.png"></li></ol><pre><code>//搜索引擎Magi//关键字magi.com//网址格式（用“%s”代替搜索字词）https://magi.com/search?fr=opensearch&amp;q=%s</code></pre><h1 id="计算机"><a href="#计算机" class="headerlink" title="计算机"></a>计算机</h1><ol><li><p><a href="http://ip138.com" target="_blank" rel="noopener">ip138</a><br>  显示当前的IP地址</p></li><li><p><a href="https://greasyfork.org/zh-CN/" target="_blank" rel="noopener">Greasy Fork</a><br> 脚本</p></li><li><p><a href="https://www.sojson.com/image/format.html" target="_blank" rel="noopener">图片格式转换</a></p></li><li><p><a href="http://www.hackhw.com/" target="_blank" rel="noopener">黑域基地</a></p></li><li><p><a href="https://www.appinn.com/" target="_blank" rel="noopener">小众软件</a></p></li></ol><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><ol><li><p><a href="http://www.pc6.com/" target="_blank" rel="noopener">PC6下载站</a></p></li><li><p><a href="https://www.onlinedown.net/" target="_blank" rel="noopener">华军软件园</a></p></li><li><p><a href="http://www.dayanzai.me/" target="_blank" rel="noopener">大眼仔旭</a></p></li><li><p><a href="https://www.ypojie.com/" target="_blank" rel="noopener">易破解</a></p></li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre><code>https://blog.gclmit.club/archives/1a205ea0.html</code></pre>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网址and代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请Freenom域名的正确做法</title>
      <link href="/f3a0.html"/>
      <url>/f3a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="申请Freenom域名的正确做法"><a href="#申请Freenom域名的正确做法" class="headerlink" title="申请Freenom域名的正确做法"></a>申请Freenom域名的正确做法</h1><p><a href="https://www.freenom.com/zh/index.html?lang=zh" target="_blank" rel="noopener">Freenom官网</a></p><blockquote><p>注意：本教程是站长的亲身经验，会有很多坑，请大家多多包涵。</p></blockquote><p>对于新手个人站长，买一个几十块甚至几百块的域名显然不太合适。所以，Freenom出现了。它能帮我们免费注册.ga .ml .tk .gq .cf的顶级域名。这些顶级域名都是小国家的，分别是加蓬、马里共和国、托克劳群岛、赤道几内亚和中非共和国。<br>既然天上掉那么大个馅饼，谁不要呢？于是百度上出现了一堆关于Freenom域名申请的教程。然而，经过我的检验，这些教程要么是 <del>菜</del> 有误，要么就是 <del>赚流量</del> 不会。</p><h3 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h3><p> 1.加快Freenom的访问速度<br> 2.注册Freenom账号<br> 3.注册免费域名<br> 4.更改域名解析</p><h1 id="第一次尝试"><a href="#第一次尝试" class="headerlink" title="第一次尝试"></a>第一次尝试</h1><p>让我们先去Freenom官网瞅瞅。</p><p><a href="https://www.freenom.com/zh/index.html?lang=zh" target="_blank" rel="noopener">Freenom官网</a></p><p>好慢，还没有图片，真丑。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8VKSJ.png" alt="Y8VKSJ.png"></p><p>更奇怪的是，，，我居然能够把搜索框的文字删掉。。。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8VlO1.png" alt="Y8VlO1.png"></p><p>这可把我吓坏了。这网站居然长这样。</p><p>上网一搜，嗯嗯，似乎需要梯子。</p><p>可以看看我之前的博文<a href="https://www.yelow.ga/2020/05/02/ti-zi/">梯子</a> ，但是这里用不着。但是我之前就用了，可以注册，但是更繁琐，我找了一个更好的方法。</p><p>但是还是有必要介绍原方法。</p><p>我拿来梯子，爬！！！</p><p>爬上了，才发现Freenom的网站原来还行，图片挺好的。于是输入我想要的域名，点击<code>Check availability</code>,搜索域名。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8epKs.png" alt="Y8epKs.png"></p><p>很好，我找了我要的域名。</p><p>那么，注册！！！</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8e6zQ.png" alt="Y8e6zQ.png"></p><p>点击<code>现在获取</code>，then。。。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8eRLn.png" alt="Y8eRLn.png"></p><p>不可用？？</p><p>一个一个选，居然都不能选。换一个也是一样。</p><p>莫不是Freenom抽了？╰（‵□′）╯</p><h1 id="注册Freenom账号"><a href="#注册Freenom账号" class="headerlink" title="注册Freenom账号"></a>注册Freenom账号</h1><blockquote><p>这一步网上很多教程都省略了，没有Freenom账号，你在搜索域名时根本无法选域名。</p></blockquote><p>一顿Bing，发现是没注册的缘故。</p><p>那么注册一个账号吧，但是不知道入口。</p><p>再找，找到了，这Freenom真抠，藏这么深。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8m6k6.png" alt="Y8m6k6.png"></p><p>点击首页的<code>合作伙伴</code>，选择<code>开发人员</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8mzBn.png" alt="Y8mzBn.png"></p><p>点击<code>&gt; 今天就获得一个随机的域账户！</code>。</p><p>变英文了。英文不好的同志，麻烦自己翻译一下啦/<del>/</del>/~ ~ ~ ~</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8nrvQ.png" alt="Y8nrvQ.png"></p><p>再<code>1</code>处输入你的电子邮箱，然后点击<code>2</code>处确认发送邮件。</p><p>之后的过程不赘述了哈</p><blockquote><p>注意：提交不能太频繁了。不然Freenom把你列入黑名单就不成了。</p><p>还要，现在我乱填了个人信息，其实这也是我的习惯了哈哈</p></blockquote><h1 id="注册免费域名"><a href="#注册免费域名" class="headerlink" title="注册免费域名"></a>注册免费域名</h1><p>好了，回到首页，右上角有个<code>Sign in</code>，中文是<code>登入</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8uri6.png" alt="Y8uri6.png"></p><p>输入注册的账号密码，点<code>Login</code>，登录吧。</p><p>别告诉我你找不到那里搜域名了，看下图：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8u4ot.png" alt="Y8u4ot.png"></p><p>找到了吧？</p><p>继续吧，搜索。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8KXcD.png" alt="Y8KXcD.png"></p><p>选好之后呢，选择<code>Checkout</code>，“购买<br>”</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8MKNq.png" alt="Y8MKNq.png"></p><p>先不要改参数，把使用时间改为<code>12 Months @ Free</code>，然后信心十足地，按下<code>Continue</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y8M7rQ.png" alt="Y8M7rQ.png"></p><p>勾上小框框，终于可以<code>Complete Order</code>了。</p><p>但是相信大多数的人把接下来的英文翻译一下，都会发现注册没成功。</p><h1 id="让Freenom相信你不是机器人"><a href="#让Freenom相信你不是机器人" class="headerlink" title="让Freenom相信你不是机器人"></a>让Freenom相信你不是机器人</h1><p>又一顿Bing，发现是我的IP和注册时的地址不对应。</p><p>没办法，只能听Freenom的。</p><p>弄个免费的也真难，害（；´д｀）ゞ</p><p>网上都是介绍用ipip.net去搜索梯子爬出去的IP。但是成功率不高而且每次都需要配置一番。</p><p>我找到了FireFox。</p><p>先下载一个FireFox。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y83yWt.png" alt="Y83yWt.png"></p><p>打开<code>附加组件</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y88pf1.png" alt="Y88pf1.png"></p><p>搜索<code>iGG谷歌访问助手</code>，并安装。<br>国内FireFox的速度还行。</p><p>然后爬这个助手的梯子，会发现你的IP根本没变就能很快访问Freenom。</p><p>然后，</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/05/10/Y88cN9.png" alt="Y88cN9.png"></p><p>把你的个人信息完善一下，只需要地址是真的即可。</p><p>再注册就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Freenom </tag>
            
            <tag> 免费域名申请 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最好用的编辑器</title>
      <link href="/d87e.html"/>
      <url>/d87e.html</url>
      
        <content type="html"><![CDATA[<p>之前用win自带的<code>记事本</code>，功能太鸡肋了。啥都没有，而且最不能忍受的就是，微软的程序猿<del>自己认为</del>很聪明，给UTF-8加了BOM。</p><p>然后，许多代码出错emmm</p><p>直接上链接：<a href="npp.7.8.5.Installer.x64.exe">这里，v7.8.5_x64</a></p><p>附上哈希值，怕<code>CloudFlare</code>的<code>CDN</code>啥时候抽了，下载出错：</p><pre><code>CRC32: 80A1EBD6MD5: CD8C07848895C989C81C9D88C8BFEA88SHA-1: 820C75A6E7B5835AB01E45DE728AE3434500ABF5</code></pre><h1 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h1><p><a href="a.zip">Start Test</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NotePad++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梯子</title>
      <link href="/c0a3.html"/>
      <url>/c0a3.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oops~,破解失败咯。" data-whm="Oops~,破解失败咯。">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请提供密码，拒绝暴力破解。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c64a2153e47345b77cb0070104d6abea06009e4173822786f5d186e40c3aa5c8">33d81cbe5df02814b6b1ac94c30a06d0482b6edc321cc2af376224999c114f9ce6367f22d261aad495983a617346276d2a343967597f14e09e582c9c999061745bef71bfb9d965ca5d4540b98556ca8dc3d10f0fbd4a87c7b2ac459e471e70f2558d618d7e58b9d2ea1a54250f81a937bfbb69d28017fb2e53912e5f2641955a27372a5153eed5cc04f01794bde29474a26e4e0976b67153e09ee223825a1b6e69d6ed7a0d9502ab287b7e51c9d6360618db863a4b657afb7b35a343ab0b3e7e0370a10a2896f7b93758e08d2c10e60e4cc4d2cfbffedc0a97716e088cd35db4ae9f257aa07a1014441809f3b1b4818fe8d27dc7ba06b30c298b4557944307494be0bd1fa868f212aaa7079ce85ca4c8218605f1b0c7cecb3a0201822722f3afc4c9911914e7195252afdc78e4418dd0ec9ea7bf5e404443e7bc2fc1ef00919a5877eaf438f58d2e2ac3d6d6aee1893c835f2e724d2367ed93405acd712810564cb7a91ecb2cc937eaab2635666b787034b97fde83c75ae1dff87894afee7708ebaaadb4fc1d6378337d7bb57873c0ff95c74a37b8fe76777e406a6327d96f92b75fb095c779ea20d53d030600814f18f8be322b559d80ea89b6feb037021d451162453e2ad83c30ffda19e83cdda74dec9c62dc1429690686ad6c8c31d297e3691a6a058dfc842a0c1aa773057664c32f74bb17156d3f90a82032f2ee331147a9844313eb6284f14d0361ffe15be23975e5258ce54be64106452472e4442f8b3af3369c20ed678d05f9cbde178d196a9705b763cfebfcc1563ce4e128b0d3ce6f8a25916128976516a647634c5164f0c3101642f9c03a648f142f51acc92d9a74fccdd83c881f6aeec1c28bb574ec7774f6198d2f14279e063499b8704d22d4d58815086b736b58e74f573dc5a34e4f5df8dc3b5f998496d1302431ec7fcdc0b08777164e7e2083ba39be4f178c156544dc542d89d97863751311af1736463d358fc0e725adbf9edee4541f1f7550fc9f14f549bb88489bb8d87c548cb431ce058ea4abe7b5e85660cbacaff008b40bef9f577dfcba81ce49c54c0f4cceaba07d5fd9640b47159dc66613d13f5958b6e46d7bbb3d61ed98b74b7847b8e0cf1493272dfd5eedf6269a92fbade1cfa96e87413b6b5b5d197eeb776d5b00adda578425c7fc01523b1822b2c4174782e85d28da8eec030599f7bc7d1c5ee6aadf7f72a41a5847190197c09ec307572f2ffc078aa3f54f82287f189b2c51241f4388325264b43c4a38fb75cadea91a4c8b6e1dec6cb4b198b7f1aa0d0167af573300a1f713d2d780fe2cb25bc75beebf5d0eb7ea3046d2ad9c6e4024753b2611f2d7aa4226007d1034eb66c0ec03484a4631cd3bfc1667aaa37c949c6a030db0de9508cee965a37447eb4841ec3f7e9533e632568b6d5264f5679f2e1472b2e315942f08b7bc167d20c9fc6ebbe9d6624f22b58ebd096a2e4ed8caa6c86a049e3bae966541abaf13531dd31798d0f4e246573e3aeb89565d20c819ac79ea9bd039588acab27bacb49de86dd897f81c3f7aa648c04792a39f97303c41350cebd7e782774e43ff88b08c0066a5716aee997490b6763d5b57a6b40c546ecabec781c76b70c1ba051cddc3a56eea82efaf25884240fa48eb9801bc2a52018fd14a1fd91ec58f0b3e4dc4aa1241f2078df1bb1802c32cbfc5fadfb4af2d2c0a6efd47ed48c1ff4f69fe77dd12fcd67e1cd0d6ca2fccc9d9aa67109afc1b9c1c64ad47023b5fd0c709dad1079a2b81d81621ac6107d5448b0fd9c6bb52b28e375a0e6b6db38c6271ea65f2826192a0da88294cb4e77aa0c0ca15bd62068144cbe9ea85bbbb03c1c4b22b5fda0d9a73a241bcd0071457d22c3e877d8b0fef70e9e14dccfc3c90c8875824dfea83e203833b1b435cb278fbfc4a4828654436c39221d0680ecdd4423c62670cf841773ec4c1e7dd22f463fdecf8bfbdf4af942819a9ed17971a4fb67ce2b905b4454791997183b35c2f924e032f1d6267c69ad40db862286b22f3ef240f66ad4f8b0598731b8623f339e8e1ac3b2a515c546b4d5a0f127ec6c4614f02a809b74197610ed971f6176d6769d84d21080010a0e370d83d4749b192b8af7c245af760c560fb53967d16cf1b7f5380390417e69f8d80690fd909f58fdfabc76ae7a008eff581f7a4bb0d4a7664fdff81cb15879d97cfc60095d503c457e96b29ac0ca7de594ee86ac17ecff97a6e34d3d1ae452dd5d9cdde6e0f2ca11b10c2c3967b385969dad773c6c2806e2dbaabe1fd054fdf132d8b11bc7f18e1f22368111ac276a0f5ff0df45005aaf6698bc62e8d82e70960b3d5b1fcc2be69b56baa981f22efd75b431348f06d6ce8d80b965e7fa0faf847f28e7234b842fcf097e83e04b7b2979672db40cf94e363f2cb38925858d797c13aeeb458b0951a3feea4febddcc2f7639e55960bc4a04354c83140359eaf1943e6fba5db61b11502787bed88c4dcc549071bf4d41251b48cf1c2880ddb2cdc0fe330cb6525795c4e26050970f8ac771c95b9bf644ce4b0e712de7d673f5e6a14d9e21efd0f197bba207a8bb0467956109ff8ae413c918914f62407d017a1c809e413572a36f70eb9bdc7a74732e4ae50d4c60681afb2acfc83517294f3e7ef6344aebe964fc88d318b3d5a6dfa0506f85bd1d5b20fd698b8dd939dbdfcb38342c6b776a197e8afda1b80eaca020e9f29369974eb92a14fc0ab604dd6976e74a8e492429e78dcdb1b03d8bb30e4251ccf8a390de7be3e585dc5d6202af25787b8e0054716d9714858e534e3f1b08a1552975f3c9c2b2c152fbc78da48a3b1aff39c60216a64c53a3e8186790709f7a05bff008085bee901c29098da4b4b9929511c9715f1f0578fe7d76a56f9d5ea8e909b23204b2496e66707e7807cfca0aa8425c8835156e6a10053b84114379533ba02d489ed2897054ea914f2ad7606c1bf9a3f077914c9145ffd403197215fd6e6b8e12a36c8f25e9fcd4bc2bac4345546f4f698c2781cb598feee2a5b92ec03cb67ae722648ba156a1e67ff270c3babd9c8031ccffae6f09acc2320cacca1a302e51196e11f65149f29270ec4f6066e08cbc4628693a47a7b3ff7c39cbb0ca9afac1d7a9276f64130f268ffb91279f56a9ee0a364ffe48a67d43b286ab1d5f32463febe1b81379f2898d40faedd3351cf56b34ea7da13e8c857e8a6361c11dca488a9674ec7462c9e78c576ab37f20e70d7608dd6da652161a841861eb8e2896fcdadcdfc62bae338660b80d75aaab55613083858f575d58015c553c4c0abef892974b088ac5a00a3ec5c0a0dc6d305782811a32e42030999e24a1e149a89a2a77832d77103813aae760d6af294380aee98eafcb12010d652e6f354e4e0877e2822c3a4352596f7d0a8c16c15c59c44ff33ebe56ab0edd9f79368c566a6c1ad967d215ef21a67698d2eacc5a564979095fe220bcd296bff7a3740d9588ddc988e78f7e4d5d5fe743216de06bb942010f0f72c2223bb5abba68ec021891c1d7d38dc47d7cad634045a8db5f393cb6faa3579feaf6c24ca244692f98c895aea897cd312b8673aefbb128c1c4ede951392b2ac58d2b102f38694f416e6efc29d9c9c6863cd89ce1c553d9a77660d29e67f5d80698dea73c829b53fba8dfc4a4dafed5c81f65ac4b9f5</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 梯子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yellow Pages</title>
      <link href="/74f.html"/>
      <url>/74f.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oops~,破解失败咯。" data-whm="Oops~,破解失败咯。">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请提供密码，拒绝暴力破解。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0d01aca336d29302464d5ba227896e8cdbbc25f78f2436fe389bbc959dfc247e"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次使用GitHub+Hexo</title>
      <link href="/1583.html"/>
      <url>/1583.html</url>
      
        <content type="html"><![CDATA[<h1 id="以小白的眼光教你搭建Github-Hexo"><a href="#以小白的眼光教你搭建Github-Hexo" class="headerlink" title="以小白的眼光教你搭建Github+Hexo"></a>以小白的眼光教你搭建Github+Hexo</h1><p>   之前我接触过的博客程序，是用PHP的Wordpress。但是毕竟我是个初三学生，没法租服务器，也就放弃了搭建个人博客的想法。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587307981577&di=cdea9fc487d45efc2eb125834b95f0c7&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fq_70%2Cc_zoom%2Cw_640%2Fimages%2F20190809%2F0ce331bec58c4cbf823ac58f32fdbdb9.jpeg" alt="我太难了"></p><p>但是后来，我在知乎上遇到了一个大佬，和我一样呢，也是初三。推荐一下TA的博客吧，做个友链。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3488729154,2763255392&fm=26&gp=0.jpg" alt="hh"></p><p>这是TA的Blog：</p><pre><code>https://blog.cyfan.top/ </code></pre><p>话不多说，直接讲怎么搭建Hexo。</p><h2 id="建立Github仓库"><a href="#建立Github仓库" class="headerlink" title="建立Github仓库"></a>建立Github仓库</h2><blockquote><p>注释：这个github仓库是用来放网站的！！！</p></blockquote><p>Github不用我多说，上官网 <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> .注册账号。英文不好的话emmm我也不能救你，用翻译软件吧。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="http://www.17qq.com/img_biaoqing/29545814.jpeg" alt="无能为力"></p><p>创建一个仓库，看图！！</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/19/JKOKfO.png" alt="创建仓库_1"></p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/19/JKObAx.png" alt="创建仓库_2"></p><p>这时候，你的仓库应该是这样的。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyCeJS.png" alt="仓库_1"></p><p>但这是我创建README.md文件后的样子，如果你没有创建README.md文件，那么你的仓库可能是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyCmRg.png" alt="仓库_2"></p><p>不管怎样，都是对的。</p><p>然后，我们来创建Pages。</p><h2 id="创建Github-Pages"><a href="#创建Github-Pages" class="headerlink" title="创建Github Pages"></a>创建Github Pages</h2><p>在你的仓库上方，会有一个“Settings”按钮，点击它。</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyFKQe.png" alt="Settings"></p><p>往下翻，你会看到Github Pages栏，像下图一样：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyFDwn.png" alt="Github Pages"></p><p>选择Choose a theme（翻译：选择一个主题），会出现以下界面：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyEQL4.png" alt="Github Pages_2"></p><p>这样，会出现如下图所示的界面：</p><p><img src="https://cdn.jsdelivr.net/gh/henryhe613/pic/images/loading.gif" data-original="https://s1.ax1x.com/2020/04/25/JyV6HJ.png" alt="Github Pages_3"></p><p>现在可以暂时不用管Github了。</p>]]></content>
      
      
      <categories>
          
          <category> Computer Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
